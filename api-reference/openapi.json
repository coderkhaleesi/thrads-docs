{
  "openapi": "3.1.0",
  "info": {
    "title": "Thrads API",
    "description": "Thrads API",
    "version": "0.0.1"
  },
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Health Check",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "General"
        ],
        "summary": "Read Root",
        "operationId": "read_root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/get-ad/": {
      "post": {
        "tags": [
          "Search V1",
          "sponsored-search-prompt"
        ],
        "summary": "Get Sponsored Search Prompt",
        "description": "Retrieves a sponsored search prompt with product information for display in search results. Returns creative content, product details, and optional keyword search data based on user preferences and metadata. Supports frequency limiting and regional targeting.",
        "operationId": "get_sponsored_search_prompt_api_v1_search_get_ad__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredSearchPromptRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredSearchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/feedback/": {
      "post": {
        "tags": [
          "Search V1",
          "sponsored-search-feedback"
        ],
        "summary": "Submit Sponsored Search Feedback",
        "description": "Collects user feedback on sponsored search results to improve targeting and relevance. Accepts click/interaction data along with optional search context. Uses signed tokens for secure feedback attribution and prevents fraud.",
        "operationId": "sponsored_search_feedback_api_v1_search_feedback__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredSearchFeedbackRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/prompt/get-ad/": {
      "post": {
        "tags": [
          "Prompt V1",
          "sponsored-chatbot-prompt"
        ],
        "summary": "Get Sponsored Chatbot Prompt",
        "description": "Generates a contextual sponsored prompt for integration into chatbot conversations. Returns a tailored prompt with brand information, tracking token, and visual assets. Considers conversation history, user preferences, and ad frequency limits to deliver relevant sponsored content.",
        "operationId": "get_sponsored_chatbot_prompt_api_v1_prompt_get_ad__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredChatbotPromptRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredPromptResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/prompt/click/": {
      "post": {
        "tags": [
          "Prompt V1",
          "sponsored-prompt-click"
        ],
        "summary": "Register Sponsored Prompt Click",
        "description": "Records user interaction with a sponsored chatbot prompt for analytics and billing purposes. Accepts a signed token to securely track clicks and measure engagement. Used for performance monitoring and advertiser reporting.",
        "operationId": "sponsored_chatbot_prompt_click_api_v1_prompt_click__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredChatbotPromptClickRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/message/get-ad/": {
      "post": {
        "tags": [
          "Message V1",
          "sponsored-message"
        ],
        "summary": "Get Sponsored Message",
        "description": "Retrieves a sponsored message with product recommendations for display in chat interfaces. Returns creative content, product information, and media assets tailored to the conversation context. Supports personalization based on user region, conversation history, and targeting preferences.",
        "operationId": "get_sponsored_message_api_v1_message_get_ad__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredMessageChatbotRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredMessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/message/redirect/{token}": {
      "get": {
        "tags": [
          "Message V1",
          "redirect"
        ],
        "summary": "Redirect",
        "description": "Redirect to the actual URL and update analytics\nHandles both active and expired chat sessions",
        "operationId": "redirect_api_v1_message_redirect__token__get",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "SponsoredChatbotPromptClickRequest": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "token"
        ],
        "title": "SponsoredChatbotPromptClickRequest"
      },
      "SponsoredChatbotPromptRequest": {
        "properties": {
          "userId": {
            "type": "string",
            "maxLength": 100,
            "title": "Userid"
          },
          "chatId": {
            "type": "string",
            "maxLength": 100,
            "title": "Chatid"
          },
          "userRegion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Userregion"
          },
          "content": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "metaData": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "force": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Force"
          },
          "conversationOffset": {
            "type": "integer",
            "maximum": 20,
            "minimum": 0,
            "title": "Conversationoffset",
            "default": 2
          },
          "adFrequencyLimit": {
            "type": "integer",
            "maximum": 20,
            "minimum": 0,
            "title": "Adfrequencylimit",
            "default": 5
          },
          "production": {
            "type": "boolean",
            "title": "Production",
            "default": false
          },
          "max_length": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Length"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "userId",
          "chatId"
        ],
        "title": "SponsoredChatbotPromptRequest",
        "description": "Request model for sponsored chatbot prompts"
      },
      "SponsoredMessageChatbotRequest": {
        "properties": {
          "userId": {
            "type": "string",
            "maxLength": 100,
            "title": "Userid"
          },
          "chatId": {
            "type": "string",
            "maxLength": 100,
            "title": "Chatid"
          },
          "userRegion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Userregion"
          },
          "content": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "maxProperties": 2,
            "minProperties": 2,
            "title": "Content"
          },
          "metaData": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "force": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Force"
          },
          "conversationOffset": {
            "type": "integer",
            "maximum": 20,
            "minimum": 0,
            "title": "Conversationoffset",
            "default": 2
          },
          "adFrequencyLimit": {
            "type": "integer",
            "maximum": 20,
            "minimum": 0,
            "title": "Adfrequencylimit",
            "default": 5
          },
          "production": {
            "type": "boolean",
            "title": "Production",
            "default": false
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "userId",
          "chatId",
          "content"
        ],
        "title": "SponsoredMessageChatbotRequest",
        "description": "Request model for sponsored chatbot prompts"
      },
      "SponsoredSearchFeedbackRequest": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "clicked": {
            "type": "boolean",
            "title": "Clicked"
          },
          "user_search": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Search"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "token",
          "clicked"
        ],
        "title": "SponsoredSearchFeedbackRequest"
      },
      "SponsoredSearchPromptRequest": {
        "properties": {
          "userId": {
            "type": "string",
            "title": "Userid"
          },
          "metaData": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "max_length": {
            "type": "integer",
            "maximum": 4096,
            "exclusiveMinimum": 0,
            "title": "Max Length",
            "description": "Maximum length of the prompt.",
            "default": 1024
          },
          "production": {
            "type": "boolean",
            "title": "Production",
            "default": false
          },
          "return_keywords_search": {
            "type": "boolean",
            "title": "Return Keywords Search",
            "default": false
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "userId"
        ],
        "title": "SponsoredSearchPromptRequest"
      },
      "APIResponse": {
        "properties": {
          "apiVersion": {
            "type": "string",
            "title": "API Version",
            "description": "Version of the Thrads API being used"
          },
          "requestId": {
            "type": "string",
            "title": "Request ID",
            "description": "Unique identifier for this API request for tracking and debugging"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "ISO 8601 timestamp when the response was generated"
          },
          "docsUrl": {
            "type": "string",
            "title": "Documentation URL",
            "description": "URL to the API documentation for reference"
          },
          "totalTime": {
            "type": "number",
            "title": "Total Time",
            "description": "Total processing time for the request in seconds"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Request status: 'success' for successful requests, 'error' for failed requests"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Human-readable message describing the response or error"
          },
          "data": {
            "type": "object",
            "title": "Data",
            "description": "Response payload containing the requested data"
          }
        },
        "type": "object",
        "required": [
          "apiVersion",
          "requestId",
          "timestamp",
          "docsUrl",
          "totalTime",
          "status",
          "message",
          "data"
        ],
        "title": "APIResponse",
        "description": "Standard response wrapper for all Thrads API endpoints"
      },
      "SponsoredMessageData": {
        "properties": {
          "creative": {
            "type": "string",
            "title": "Creative",
            "description": "The marketing creative content or message text to display"
          },
          "prod_name": {
            "type": "string",
            "title": "Product Name",
            "description": "Name of the sponsored product or service"
          },
          "img_url": {
            "type": "string",
            "title": "Image URL",
            "description": "URL to the product image or promotional graphic"
          },
          "prod_url": {
            "type": "string",
            "title": "Product URL",
            "description": "Landing page URL for the sponsored product"
          }
        },
        "type": "object",
        "required": [
          "creative",
          "prod_name",
          "img_url",
          "prod_url"
        ],
        "title": "SponsoredMessageData",
        "description": "Product information and creative content for sponsored messages"
      },
      "SponsoredMessageResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIResponse"
          },
          {
            "properties": {
              "data": {
                "$ref": "#/components/schemas/SponsoredMessageData"
              }
            }
          }
        ],
        "title": "SponsoredMessageResponse"
      },
      "SponsoredSearchData": {
        "properties": {
          "creative": {
            "type": "string",
            "title": "Creative",
            "description": "The marketing creative content or search result text to display"
          },
          "prod_name": {
            "type": "string",
            "title": "Product Name",
            "description": "Name of the sponsored product or service"
          },
          "img_url": {
            "type": "string",
            "title": "Image URL",
            "description": "URL to the product image or promotional graphic"
          },
          "prod_url": {
            "type": "string",
            "title": "Product URL",
            "description": "Landing page URL for the sponsored product"
          },
          "keyword_search": {
            "type": "string",
            "title": "Keyword Search",
            "description": "Optional search keywords returned when return_keywords_search is enabled in the request"
          }
        },
        "type": "object",
        "required": [
          "creative",
          "prod_name",
          "img_url",
          "prod_url"
        ],
        "title": "SponsoredSearchData",
        "description": "Product information and creative content for sponsored search results with optional keyword data"
      },
      "SponsoredSearchResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIResponse"
          },
          {
            "properties": {
              "data": {
                "$ref": "#/components/schemas/SponsoredSearchData"
              }
            }
          }
        ],
        "title": "SponsoredSearchResponse"
      },
      "SponsoredPromptData": {
        "properties": {
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "The AI-generated contextual prompt text tailored for the conversation"
          },
          "link": {
            "type": "string",
            "title": "Link",
            "description": "Clickable URL for the sponsored content or product page"
          },
          "brand": {
            "type": "string",
            "title": "Brand",
            "description": "Brand or company name associated with the sponsored content"
          },
          "icon": {
            "type": "string",
            "title": "Icon",
            "description": "URL to the brand logo or icon image for visual branding"
          },
          "token": {
            "type": "string",
            "title": "Token",
            "description": "Secure tracking token used to record user interactions and clicks"
          }
        },
        "type": "object",
        "required": [
          "prompt",
          "link",
          "brand",
          "icon",
          "token"
        ],
        "title": "SponsoredPromptData",
        "description": "AI-generated sponsored prompt with brand information and tracking capabilities for chatbot integration"
      },
      "SponsoredPromptResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIResponse"
          },
          {
            "properties": {
              "data": {
                "$ref": "#/components/schemas/SponsoredPromptData"
              }
            }
          }
        ],
        "title": "SponsoredPromptResponse"
      },
      "APIErrorResponse": {
        "properties": {
          "apiVersion": {
            "type": "string",
            "title": "API Version",
            "description": "Version of the Thrads API being used"
          },
          "requestId": {
            "type": "string",
            "title": "Request ID",
            "description": "Unique identifier for this API request for tracking and debugging"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "ISO 8601 timestamp when the error response was generated"
          },
          "docsUrl": {
            "type": "string",
            "title": "Documentation URL",
            "description": "URL to the API documentation for reference"
          },
          "totalTime": {
            "type": "number",
            "title": "Total Time",
            "description": "Total processing time before the error occurred in seconds"
          },
          "status": {
            "type": "string",
            "enum": ["error"],
            "title": "Status",
            "description": "Always 'error' for error responses"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Human-readable error message describing what went wrong"
          },
          "data": {
            "type": "null",
            "title": "Data",
            "description": "Always null for error responses"
          },
          "error": {
            "type": "object",
            "title": "Error",
            "description": "Detailed error information including error codes, types, and additional context"
          }
        },
        "type": "object",
        "required": [
          "apiVersion",
          "requestId",
          "timestamp",
          "docsUrl",
          "totalTime",
          "status",
          "message",
          "data",
          "error"
        ],
        "title": "APIErrorResponse",
        "description": "Standard error response wrapper for failed API requests with detailed error information"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}