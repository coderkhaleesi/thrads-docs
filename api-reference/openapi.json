{
  "openapi": "3.1.0",
  "info": {
    "title": "",
    "version": "0.0.0"
  },
  "servers": [
    {
      "url": "https://api.thrads.ai"
    }
  ],
  "paths": {
    "/developer/serve-sponsored-questions/": {
      "post": {
        "operationId": "developer_serve_sponsored_questions_create",
        "description": "Generate sponsored question",
        "tags": ["developer"],
        "security": [
          { "thradsApiKey": [] },
          {}
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeveloperSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeveloperErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeveloperErrorResponse" } }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeveloperErrorResponse" } }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeveloperErrorResponse" } }
            }
          }
        }
      }
    },
    "/developer/serve-sponsored-questions/click/": {
      "post": {
        "operationId": "developer_serve_sponsored_questions_click_create",
        "description": "Register a click for a sponsored question using a signed token.",
        "tags": ["developer"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredQuestionClickInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeveloperSuccessResponseNullData"
              }
            }
           }
          },
          "400": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeveloperErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeveloperErrorResponse" } }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeveloperErrorResponse" } }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/DeveloperErrorResponse" } }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DeveloperSuccessResponse": {
        "type": "object",
        "properties": {
          "apiVersion": { "type": "string", "example": "1.0", "description": "API version" },
          "requestId": { "type": "string", "example": "req_123456", "description": "Request ID" },
          "timestamp": { "type": "string", "format": "date-time", "description": "Timestamp of the request" },
          "data": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/SponsoredQuestion" },
                    { "type": "null" }
                  ],
                  "description": "Response data including the sponsored question and its attributes"
                },
          "status": { "type": "string", "enum": ["success", "error"], "description": "Always 'success' for success responses" },
          "message": { "type": "string", "nullable": true, "description": "Success message" },
          "totalTime": { "type": "number", "nullable": true, "description": "Total time taken to process the request" },
          "documentationUrl": { "type": "string", "format": "uri", "nullable": true, "description": "Documentation URL" }
        },
        "required": [
          "apiVersion",
          "requestId",
          "timestamp",
          "status",
          "data",
          "message",
          "totalTime",
          "documentationUrl"
        ]
      },
      "DeveloperErrorResponse": {
        "type": "object",
        "properties": {
          "apiVersion": { "type": "string", "example": "1.0", "description": "API version" },
          "requestId": { "type": "string", "example": "req_123456", "description": "Request ID" },
          "timestamp": { "type": "string", "format": "date-time", "description": "Timestamp of the request" },
          "status": { "type": "string", "enum": ["error"], "description": "Always 'error' for error responses" },
          "message": { "type": "string", "nullable": true, "description": "Error message" },
          "error": { "type": "string", "nullable": true },
          "totalTime": { "type": "number", "nullable": true },
          "documentationUrl": { "type": "string", "format": "uri", "nullable": true, "description": "Documentation URL" }
        },
        "required": [
          "apiVersion",
          "requestId",
          "timestamp",
          "status",
          "message",
          "error",
          "totalTime",
          "documentationUrl"
        ]
      },
      "DeveloperSuccessResponseNullData": {
        "type": "object",
        "properties": {
          "apiVersion": { "type": "string", "example": "1.0", "description": "API version" },
          "requestId": { "type": "string", "example": "req_123456", "description": "Request ID" },
          "timestamp": { "type": "string", "format": "date-time", "description": "Timestamp of the request" },
          "status": { "type": "string", "enum": ["success", "error"], "description": "Always 'success' for success responses" },
          "data": { "type": "null", "description": "No data returned for click event" },
          "message": { "type": "string", "nullable": true, "description": "Success message" },
          "totalTime": { "type": "number", "nullable": true, "description": "Total time taken to process the request" },
          "documentationUrl": { "type": "string", "format": "uri", "nullable": true, "description": "Documentation URL" }
        },
        "required": [
          "apiVersion",
          "requestId",
          "timestamp",
          "status",
          "data",
          "message",
          "totalTime",
          "documentationUrl"
              ]
            },
      "SponsoredQuestion": {
        "type": "object",
        "description": "Serializer for SponsoredQuestion model.",
        "properties": {
          "icon_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "Icon URL"
          },
          "brand": {
            "type": "string",
            "description": "Brand name"
          },
          "keyword_search": {
            "type": "string",
            "nullable": true,
            "description": "Keyword search that maps to the sponsored question in standard search bars"
          },
          "question": {
            "type": "string",
            "description": "Sponsored question"
          },
          "token": {
            "type": "string",
            "readOnly": true,
            "description": "Token to be used for click tracking"
          }
        },
        "required": ["question", "token"]
      },
      "SponsoredQuestionClickInput": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Token to be used for click tracking"
          }
        },
        "required": ["token"]
      }
    },
    "securitySchemes": {
      "thradsApiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Thrads-Api-Key"
      }
    }
  }
}