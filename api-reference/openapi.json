{
  "openapi": "3.1.0",
  "info": {
    "title": "",
    "version": "0.0.0"
  },
  "servers": [
    {
      "url": "https://api.thrads.ai"
    }
  ],
  "paths": {
    "/developer/serve-sponsored-questions/": {
      "post": {
        "operationId": "developer_serve_sponsored_questions_create",
        "description": "Generate sponsored question",
        "tags": ["developer"],
        "security": [
          { "thradsApiKey": [] },
          {}
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeveloperResponse"
                }
              }
            }
          }
        }
      }
    },
    "/developer/serve-sponsored-questions/click/": {
      "post": {
        "operationId": "developer_serve_sponsored_questions_click_create",
        "description": "Register a click for a sponsored question using a signed token.",
        "tags": ["developer"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredQuestionClickInput"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredQuestionClickInput"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredQuestionClickInput"
              }
            }
          }
        },
        "security": [
          { "jwtAuth": [] },
          {}
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredQuestionClickInput"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DeveloperResponse": {
        "type": "object",
        "properties": {
          "apiVersion": { "type": "string", "example": "1.0" },
          "requestId": { "type": "string", "example": "req_123456" },
          "timestamp": { "type": "string", "format": "date-time" },
          "status": { "type": "string", "enum": ["success", "error"] },
          "message": { "type": "string", "nullable": true },
          "adStatus": { "type": "string", "nullable": true, "description": "Specific status for ad-related responses (served, not_found, not_eligible)" },
          "data": { 
            "oneOf": [
              { "$ref": "#/components/schemas/SponsoredQuestion" },
              { "type": "null" }
            ]
          },
          "errors": { "type": "object", "nullable": true },
          "totalTime": { "type": "number", "nullable": true },
          "documentationUrl": { "type": "string", "format": "uri", "nullable": true }
        },
        "required": ["apiVersion", "requestId", "timestamp", "status"]
      },
      "SponsoredQuestion": {
        "type": "object",
        "description": "Serializer for SponsoredQuestion model.",
        "properties": {
          "icon_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "keyword_search": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "question": {
            "type": "string",
            "minLength": 10,
            "maxLength": 500
          },
          "token": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": ["question", "token"]
      },
      "SponsoredQuestionClickInput": {
        "type": "object",
        "description": "Input serializer for sponsored question click events.\nValidates the token and extracts the event_id.",
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "required": ["token"]
      }
    },
    "securitySchemes": {
      "thradsApiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Thrads-Api-Key"
      }
    }
  }
}